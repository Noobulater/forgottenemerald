Util_LoadOnce("Util\\vector.scar")

Gate = {
	egroup = nil,
	entities = {},
	state = "on ",
	blockerEbp = GATE_BLOCKER or obps_game_move_blockers_gate,
--~ 	blockerEbp = World_GetPropertyBagGroupID("ebps\\world_objects\\gameplay\\move_blockers_gate_volcanic"),
	blockerEntities = {},
}

function Gate:New(egroup)
	local new = Clone(self)
	new.egroup = egroup
	new:SpawnBlockers()
	return new
end

function Gate:SpawnBlockers()
	for i=1, Util_CountSpawned(self.egroup) do 
		if(self.blockerEntities[i] == nil)then
			local entity = EGroup_GetSpawnedEntityAt(self.egroup, i)
			local pos = Util_GetPosition(entity)
			local facingToward = Entity_GetFacing(entity)
			facingToward = Vector3_Add(facingToward, pos)
			self.blockerEntities[i] = Entity_CreateENV(self.blockerEbp, pos, facingToward)
		else
			Entity_Spawn(self.blockerEntities[i], 1)
		end
	end
end

function Gate:Open(duration)
	if(self.state == "on ")then
		self:ChangeState("off")
		if (type(duration) == "number") then
			self.openTime = (World_GetGameTime()+duration)
			Rule_AddOneShot(function() self:Close() end, (duration+0.1))
		end
	end
end

function Gate:Close()
	if(self.state == "off")then
		if (not (type(self.openTime) == "number")) or (World_GetGameTime() >= self.openTime) then
			self:ChangeState("on ")
		end
	end
end

function Gate:IsOpen()
	return self.state == "off"
end

function Gate:ChangeState(state)
	for i=1, Util_CountSpawned(self.egroup) do 
		local e = EGroup_GetSpawnedEntityAt(self.egroup, i)
		local f = function()
			if (e ~= nil) then
				Util_SetAnimatorState(e, "jr_gate", state)
			end
		end
		
		local t = World_GetRand(1, 15)
		t = t / 10
		Rule_AddOneShot(f, t)
		
		local spawnBlocker
		if(state == "off")then
			spawnBlocker = function()
				Entity_DeSpawn(self.blockerEntities[i])
			end
			
			Rule_AddOneShot(spawnBlocker, t+5)
		elseif(state == "on ")then
			spawnBlocker = function()
				Entity_Spawn(self.blockerEntities[i])
				Cmd_PlayerAbilityPos(World_GetPlayerAt(1), abil_core_gate_knockback_on_position, Util_GetPosition(self.blockerEntities[i]), true)
			end
			
			spawnBlocker()
		end
	end	
	
	self.state = "influx"
	
	local changeState = function()
		self.state = state
	end
		
	Rule_AddOneShot(changeState, 6.5)
end



